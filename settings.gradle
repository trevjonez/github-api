/*
 *    Copyright 2019 Trevor Jones
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

pluginManagement {
  resolutionStrategy {
    eachPlugin {
      if (requested.id.id.startsWith("org.jetbrains.kotlin")) {
        useVersion(kotlinVersion)
      }
    }
  }
}

buildscript {
  repositories {
    gradlePluginPortal()
    jcenter()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

gradle.rootProject {
  buildscript {
    repositories {
      gradlePluginPortal()
      jcenter()
    }
    dependencies {
      classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
      classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
  }
  allprojects {
    repositories {
      jcenter()
    }

    //withType doesn't work from this context?
    tasks.matching { task -> task.getClass().name == "org.jetbrains.kotlin.gradle.tasks.KotlinCompile_Decorated" }
        .configureEach {
          kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += "-Xjsr305=strict"
            freeCompilerArgs += '-XXLanguage:+NewInference'
          }
        }
  }
}

include(":github-api", ":gradle-helpers", ":statuses", ":releases")
enableFeaturePreview('GRADLE_METADATA')